/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

export interface Resource extends BaseResource {
  /**
   * Resource Id
  */
  id?: string;
  /**
   * Resource Name
  */
  name?: string;
  /**
   * Kind of resource
  */
  kind?: string;
  /**
   * Resource Location
  */
  location: string;
  /**
   * Resource type
  */
  type?: string;
  /**
   * Resource tags
  */
  tags?: { [propertyName: string]: string };
}

/**
 * General API information
*/
export interface GeneralApiInformation extends Resource {
  /**
   * Icon Url
  */
  iconUrl?: string;
  /**
   * Display Name
  */
  displayName?: string;
  /**
   * Description
  */
  description?: string;
  /**
   * a public accessible url of the Terms Of Use Url of this API
  */
  termsOfUseUrl?: string;
  /**
   * DefaultConnectionNameTemplate
  */
  connectionDisplayName?: string;
  /**
   * ConnectionPortalUrl
  */
  connectionPortalUrl?: any;
}

/**
 * API policies
*/
export interface ApiPolicies extends Resource {
  /**
   * Content of xml policy
  */
  content?: string;
}

/**
 * Back end service per ASE
*/
export interface HostingEnvironmentServiceDescriptions {
  /**
   * Hosting environment Id
  */
  hostingEnvironmentId?: string;
  /**
   * Host Id
  */
  hostId?: string;
  /**
   * service url to use
  */
  serviceUrl?: string;
  /**
   * When the backend url is in same ASE, for performance reason this flag can be set to true
   * If WebApp.DisableHostNames is also set it improves the security by making the back end
   * accessible only
   * via API calls
   * Note: calls will fail if this option is used but back end is not on the same ASE
  */
  useInternalRouting?: boolean;
}

/**
 * API definitions with backend urls
*/
export interface BackendServiceDefinition extends Resource {
  /**
   * Url from which the swagger payload will be fetched
  */
  serviceUrl?: string;
  /**
   * Service Urls per Hosting environment
  */
  hostingEnvironmentServiceUrls?: HostingEnvironmentServiceDescriptions[];
}

/**
 * OAuth Settings Parameter
*/
export interface ApiOAuthSettingsParameter {
  /**
   * Value
  */
  value?: string;
  /**
   * Read only: Options available to this parameter
  */
  options?: any;
  /**
   * UI definitions per culture as caller can specify the culture
  */
  uiDefinition?: any;
}

/**
 * OAuth settings for the connection provider
*/
export interface ApiOAuthSettings {
  /**
   * Identity provider
  */
  identityProvider?: string;
  /**
   * Resource provider client id
  */
  clientId?: string;
  /**
   * Client Secret needed for OAuth
  */
  clientSecret?: string;
  /**
   * OAuth scopes
  */
  scopes?: string[];
  /**
   * Url
  */
  redirectUrl?: string;
  /**
   * Read only properties for this oauth setting.
  */
  properties?: any;
  /**
   * OAuth parameters key is the name of parameter
  */
  customParameters?: { [propertyName: string]: ApiOAuthSettingsParameter };
}

/**
 * connection provider parameters
*/
export interface ConnectionParameter {
  /**
   * Type of the parameter. Possible values include: 'string', 'securestring', 'secureobject',
   * 'int', 'bool', 'object', 'array', 'oauthSetting', 'connection'
  */
  type?: string;
  /**
   * Default parameter value
  */
  defaultValue?: any;
  /**
   * Settings defining OAuth flow for the back end provider
  */
  oAuthSettings?: ApiOAuthSettings;
  /**
   * UI definitions
  */
  uiDefinition?: any;
}

/**
 * API Management
*/
export interface ApiEntity extends Resource {
  /**
   * Name of the API
   * the URL path of this API when exposed via APIM
  */
  apiEntityName?: string;
  /**
   * the URL path of this API when exposed via APIM
  */
  generalInformation?: GeneralApiInformation;
  /**
   * the URL path of this API when exposed via APIM
  */
  path?: string;
  /**
   * Read only property returning the runtime endpoints where the API can be called
  */
  runtimeUrls?: string[];
  /**
   * Protocols supported by the front end - http/https
  */
  protocols?: string[];
  /**
   * API policies
  */
  policies?: ApiPolicies;
  /**
   * Backend service definition
  */
  backendService?: BackendServiceDefinition;
  /**
   * API definition Url - url where the swagger can be downloaded from
  */
  apiDefinitionUrl?: string;
  /**
   * Free form object for the data caller wants to store
  */
  metadata?: any;
  /**
   * Capabilities
  */
  capabilities?: string[];
  /**
   * Connection parameters
  */
  connectionParameters?: { [propertyName: string]: ConnectionParameter };
  /**
   * Timestamp of the connection creation
  */
  createdTime?: Date;
  /**
   * Timestamp of last connection change.
  */
  changedTime?: Date;
}

/**
 * Connection error
*/
export interface ConnectionError extends Resource {
  /**
   * code of the status
  */
  code?: string;
  /**
   * Description of the status
  */
  message?: string;
}

/**
 * Connection status
*/
export interface ConnectionStatus extends Resource {
  /**
   * Status
  */
  status?: string;
  /**
   * Target of the error
  */
  target?: string;
  /**
   * Error details
  */
  error?: ConnectionError;
}

/**
 * Custom logging setting value
*/
export interface CustomLoginSettingValue extends Resource {
  /**
   * Option selected for this custom login setting value
  */
  option?: string;
}

/**
 * Custom logging setting values
*/
export interface ParameterCustomLoginSettingValues extends Resource {
  /**
   * Custom parameters.
  */
  customParameters?: { [propertyName: string]: CustomLoginSettingValue };
}

/**
 * The plan object in an ARM, represents a marketplace plan
*/
export interface ArmPlan {
  /**
   * The name
  */
  name?: string;
  /**
   * The publisher
  */
  publisher?: string;
  /**
   * The product
  */
  product?: string;
  /**
   * The promotion code
  */
  promotionCode?: string;
  /**
   * Version of product
  */
  version?: string;
}

/**
 * Describes a sku for a scalable resource
*/
export interface SkuDescription {
  /**
   * Name of the resource sku
  */
  name?: string;
  /**
   * Service Tier of the resource sku
  */
  tier?: string;
  /**
   * Size specifier of the resource sku
  */
  size?: string;
  /**
   * Family code of the resource sku
  */
  family?: string;
  /**
   * Current number of instances assigned to the resource
  */
  capacity?: number;
}

/**
 * Message envelope that contains the common Azure resource manager properties and the resource
 * provider specific content
*/
export interface ResponseMessageEnvelopeApiEntity {
  /**
   * Resource Id. Typically id is populated only for responses to GET requests. Caller is
   * responsible for passing in this
   * value for GET requests only.
   * For example:
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupId}/providers/Microsoft.Web/sites/{sitename}
  */
  id?: string;
  /**
   * Name of resource
  */
  name?: string;
  /**
   * Type of resource e.g Microsoft.Web/sites
  */
  type?: string;
  /**
   * Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia
  */
  location?: string;
  /**
   * Tags associated with resource
  */
  tags?: { [propertyName: string]: string };
  /**
   * Azure resource manager plan
  */
  plan?: ArmPlan;
  /**
   * Resource specific properties
  */
  properties?: ApiEntity;
  /**
   * Sku description of the resource
  */
  sku?: SkuDescription;
}

/**
 * expanded parent object for expansion
*/
export interface ExpandedParentApiEntity extends Resource {
  /**
   * Id of connection provider
  */
  expandedParentApiEntityId?: string;
  /**
   * Id of connection provider
  */
  entity?: ResponseMessageEnvelopeApiEntity;
}

/**
 * API Connection
*/
export interface Connection extends Resource {
  /**
   * connection name
  */
  connectionName?: string;
  /**
   * display name
  */
  displayName?: string;
  /**
   * Status of the connection
  */
  statuses?: ConnectionStatus[];
  /**
   * Custom login setting values.
  */
  customParameterValues?: { [propertyName: string]: ParameterCustomLoginSettingValues };
  tenantId?: string;
  /**
   * Tokens/Claim
  */
  parameterValues?: { [propertyName: string]: any };
  /**
   * Tokens/Claim
  */
  nonSecretParameterValues?: { [propertyName: string]: any };
  metadata?: any;
  /**
   * Time in UTC when the first expiration of OAuth tokens
  */
  firstExpirationTime?: Date;
  /**
   * List of Keywords that tag the acl
  */
  keywords?: string[];
  /**
   * Timestamp of the connection creation
  */
  createdTime?: Date;
  /**
   * Timestamp of last connection change.
  */
  changedTime?: Date;
  /**
   * expanded connection provider name
  */
  api?: ExpandedParentApiEntity;
}

export interface ConsentLinkInputParameter {
  /**
   * Principal type. Possible values include: 'ActiveDirectory', 'Connection', 'MicrosoftAccount'
  */
  principalType?: string;
  /**
   * Tenant Id
  */
  tenantId?: string;
  /**
   * AAD OID (user or group) if the principal type is ActiveDirectory.
   * MSA PUID if the principal type is MicrosoftAccount.
  */
  objectId?: string;
  /**
   * Name of the parameter in the connection provider's oauthSettings
  */
  parameterName?: string;
  /**
   * Name of the parameter in the connection provider's oauthSettings
  */
  redirectUrl?: string;
}

/**
 * Connection Consent Link payload
*/
export interface ConsentLinkInput extends Resource {
  /**
   * Array of links
  */
  parameters?: ConsentLinkInputParameter[];
}

export interface ConsentLink {
  /**
   * Uri for the consent link
  */
  link?: string;
  /**
   * Uri for first party login
  */
  firstPartyLoginUri?: string;
  /**
   * Display Name of the parameter in the connection provider's oauthSettings
  */
  displayName?: string;
  /**
   * Status of the link. Possible values include: 'Unauthenticated', 'Authenticated', 'Error'
  */
  status?: string;
}

/**
 * Collection of consent links
*/
export interface ConsentLinkPayload {
  /**
   * Collection of resources
  */
  value?: ConsentLink[];
}

/**
 * List Connection Keys Input payload
*/
export interface ListConnectionKeysInput extends Resource {
  /**
   * time span for how long the keys will be valid
  */
  validityTimeSpan?: string;
}

export interface ConnectionSecrets {
  /**
   * Tokens/Claim
  */
  parameterValues?: { [propertyName: string]: any };
  /**
   * Connection Key
  */
  connectionKey?: string;
}

/**
 * Confirm Consent Code Input payload
*/
export interface ConfirmConsentCodeInput extends Resource {
  /**
   * Principal type. Possible values include: 'ActiveDirectory', 'Connection', 'MicrosoftAccount'
  */
  principalType?: string;
  /**
   * Tenant Id
  */
  tenantId?: string;
  /**
   * AAD object ID. This is userId
  */
  objectId?: string;
  /**
   * Code that was returned during consent flow
  */
  code?: string;
}

/**
 * Collection of Apis
*/
export interface ApisCollection extends Array<ApiEntity> {
  /**
   * Link to next page of resources
  */
  nextLink?: string;
}

/**
 * Collection of connections
*/
export interface ConnectionCollection extends Array<Connection> {
  /**
   * Link to next page of resources
  */
  nextLink?: string;
}
