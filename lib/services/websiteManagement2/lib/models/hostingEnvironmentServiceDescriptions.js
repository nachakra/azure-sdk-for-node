/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Back end service per ASE
 *
 */
class HostingEnvironmentServiceDescriptions {
  /**
   * Create a HostingEnvironmentServiceDescriptions.
   * @property {string} [hostingEnvironmentId] Hosting environment Id
   * @property {string} [hostId] Host Id
   * @property {string} [serviceUrl] service url to use
   * @property {boolean} [useInternalRouting] When the backend url is in same
   * ASE, for performance reason this flag can be set to true
   * If WebApp.DisableHostNames is also set it improves the security by making
   * the back end accessible only
   * via API calls
   * Note: calls will fail if this option is used but back end is not on the
   * same ASE
   */
  constructor() {
  }

  /**
   * Defines the metadata of HostingEnvironmentServiceDescriptions
   *
   * @returns {object} metadata of HostingEnvironmentServiceDescriptions
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HostingEnvironmentServiceDescriptions',
      type: {
        name: 'Composite',
        className: 'HostingEnvironmentServiceDescriptions',
        modelProperties: {
          hostingEnvironmentId: {
            required: false,
            serializedName: 'hostingEnvironmentId',
            type: {
              name: 'String'
            }
          },
          hostId: {
            required: false,
            serializedName: 'hostId',
            type: {
              name: 'String'
            }
          },
          serviceUrl: {
            required: false,
            serializedName: 'serviceUrl',
            type: {
              name: 'String'
            }
          },
          useInternalRouting: {
            required: false,
            serializedName: 'useInternalRouting',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = HostingEnvironmentServiceDescriptions;
